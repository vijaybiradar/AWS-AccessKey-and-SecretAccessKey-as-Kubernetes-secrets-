we have to provide access and secret keys for the S3 bucket, but they are being written in plain sight and as the code is stored in git so anyone can access the bucket.

 We can provide them as kubernetes secrets by below method: 

Encode AccessKey and SecretAccessKey into base64 and turn them into a Kubernetes secret.

echo -n "AKIATWRVOGK5V3ZITMWO" | base64
echo -n "6nGIROhIkZGFFvvhkTFWefX5ONFCZyvZZdTIDllR" | base64


Create a file named aws-secrets.yaml with the base64-encoded values and apply it with kubectl command.

~~~
apiVersion: v1
kind: Secret
metadata:
  name: aws-credentials
type: Opaque
data:
  id: QUtJQVRXUlZPR0s1VjNaSVRNV08=
  key: Nm5HSVJPaElrWkdGRnZ2aGtURldlZlg1T05GQ1p5dlpaZFRJRGxsUg==
~~~

~~~
kubectl apply -f aws-secrets.yaml 
~~~

Letâ€™s associate the secret with the Helm Chart by defining the below values.yaml file:

~~~
global:
  extraEnvFrom:
    - secretRef:
        name: aws-credentials
  podAnnotations:
    bucketSecretVersion: "0"
 ~~~

 
 Replace the values in the configuration with Secret reference.

For example:

~~~
      s3:
        access_key_id: ${id}
        bucket_name: test
        endpoint: s3.eu-central-1.amazonaws.com
        secret_access_key: ${key}
~~~
  
    
    
